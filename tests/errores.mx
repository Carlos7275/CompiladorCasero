
Constante Entero MI_CONSTANTE_GLOBAL = 10;
Entero varEnteraGlobal = 5;
Flotante varFlotanteGlobal = 2.5;
Booleano varBooleanaGlobal = Verdadero;
Cadena varCadenaGlobal = "Hola mundo";

// --- ERRORES ESPERADOS ---

// ERROR 1: Uso de variable no declarada
// (Línea ~9)
variableNoDeclarada = 100;

// ERROR 2: Reasignación de una constante
// (Línea ~12)
MI_CONSTANTE_GLOBAL = 20;

// ERROR 3: Tipos incompatibles en operaciones aritméticas
// (Línea ~15)
Entero resAritIncomp1 = varEnteraGlobal + varCadenaGlobal;
// (Línea ~17)
Flotante resAritIncomp2 = varFlotanteGlobal * varBooleanaGlobal;

// ERROR 4: Tipos incompatibles en asignación (NO las reglas de conversión implícita INT/FLOAT)
// (Línea ~21)
Cadena cadenaDeEntero = varEnteraGlobal;
// (Línea ~23)
Entero enteroDeCadena = varCadenaGlobal;
// (Línea ~25) - Si no permites Entero/Flotante a Booleano (o viceversa) sin cast explícito
varBooleanaGlobal = varEnteraGlobal;
// (Línea ~27) - Si no permites Booleano a Entero/Flotante
varEnteraGlobal = estaActivo; // Asumiendo 'estaActivo' es Booleano, si está declarado

// ERROR 5: Condición de bucle 'Mientras' no booleana ni numérica
// (Línea ~31)
Mientras (varCadenaGlobal) 
{
    Mostrar("Esto no debería ejecutarse.");
}

// ERROR 6: Uso de variable no declarada dentro de un bloque
// (Línea ~37)
Para(Entero i = 1; i < 5; i++){
    Mostrar("Iteración: ", i);
    Si (otraVariableNoDeclarada > 0) { // <-- Aquí se debería detectar el error
        Mostrar("Condición verdadera.");
    }
}


// --- ASIGNACIONES Y OPERACIONES QUE DEBERÍAN FUNCIONAR CORRECTAMENTE ---

// ASIGNACIONES OK (Según tus reglas personalizadas de asignación)
Entero aIntDesdeFloat = 15.7; // Debería pasar: Flotante a Entero con truncamiento (aIntDesdeFloat será 15)
Flotante aFloatDesdeInt = varEnteraGlobal; // Debería pasar: Entero a Flotante con promoción (aFloatDesdeInt será 5.0)

// OPERACIONES ARITMÉTICAS OK (Según tus reglas personalizadas de operación)
Entero opArit1 = varEnteraGlobal + varFlotanteGlobal; // Entero + Flotante -> Entero (5 + 2.5 = 7.5 -> 7)
Flotante opArit2 = varFlotanteGlobal + varEnteraGlobal; // Flotante + Entero -> Flotante (2.5 + 5 = 7.5)
Entero opArit3 = varEnteraGlobal / varFlotanteGlobal; // Entero / Flotante -> Entero (5 / 2.5 = 2.0 -> 2)
Flotante opArit4 = varFlotanteGlobal / varEnteraGlobal; // Flotante / Entero -> Flotante (2.5 / 5 = 0.5)

// CONDICIONES EN BUCLES 'MIENTRAS' Y 'SI' OK (Si implementaste "truthiness" para numéricos)
Mientras (varEnteraGlobal) // 5 es verdadero
{
    Mostrar("Bucle mientras (Entero).");
    varEnteraGlobal = 0; // Para salir en la siguiente iteración
}

Si (varFlotanteGlobal) // 2.5 es verdadero
{
    Mostrar("Condición si (Flotante).");
}

Mostrar("Fin del programa de prueba.");